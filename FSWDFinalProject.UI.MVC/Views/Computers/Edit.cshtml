@model FSWDFinalProject.DATA.EF.Computer

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>
@if (User.IsInRole("Customer"))
{
    using (Html.BeginForm("Edit", "Computers", FormMethod.Post, new { @enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Computer</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.ComputerId)
            @Html.HiddenFor(model => model.ComputerPhoto)
            @Html.HiddenFor(model => model.OwnerId)
            @Html.HiddenFor(model => model.DateAdded)
            <div class="form-group">
                @Html.LabelFor(model => model.ComputerModel, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ComputerModel, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ComputerModel, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-10">
                    @Html.ValidationMessageFor(model => model.OwnerId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ComputerPhoto, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    Existing Image: <img width="150" src="@Url.Content("~/Content/images/computers/" + Model.ComputerPhoto)" /><br /><br />
                    Change Image (No image taller than 350px): <input type="file" style="display: inline" name="logo" />
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.IsActive)
                        @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-10">
                    @Html.ValidationMessageFor(model => model.DateAdded, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
}

@if (User.IsInRole("Employee") || User.IsInRole("Admin"))
{
    using (Html.BeginForm("Edit", "Computers", FormMethod.Post, new { @enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Computer</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.ComputerId)
            @Html.HiddenFor(model => model.ComputerPhoto)
            @Html.HiddenFor(model => model.ComputerModel)
            @Html.HiddenFor(model => model.OwnerId)
            @Html.HiddenFor(model => model.IsActive)
            @Html.HiddenFor(model => model.DateAdded)
            
            <div class="form-group">
                @*@Html.LabelFor(model => model.ComputerModel, htmlAttributes: new { @class = "control-label col-md-2" })*@
                <div class="col-md-10">
                    @*@Html.EditorFor(model => model.ComputerModel, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.ValidationMessageFor(model => model.ComputerModel, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @*@Html.LabelFor(model => model.OwnerId, "OwnerId", htmlAttributes: new { @class = "control-label col-md-2" })*@
                <div class="col-md-10">
                   @* @Html.DropDownList("OwnerId", null, htmlAttributes: new { @class = "form-control" })*@
                    @Html.ValidationMessageFor(model => model.OwnerId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @*@Html.LabelFor(model => model.ComputerPhoto, htmlAttributes: new { @class = "control-label col-md-2" })*@
                <div class="col-md-10">
                    @*Existing Image: <img width="150" src="@Url.Content("~/Content/images/computers/" + Model.ComputerPhoto)" /><br /><br />
                    Change Image (No image taller than 350px): <input type="file" style="display: inline" name="logo" />*@
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
            @*   @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" }) *@
                <div class="col-md-10">
                    <div class="checkbox">
                        @*@Html.EditorFor(model => model.IsActive)*@
                        @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @*@Html.LabelFor(model => model.DateAdded, htmlAttributes: new { @class = "control-label col-md-2" })*@
                <div class="col-md-10">
                    @*@Html.EditorFor(model => model.DateAdded, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.ValidationMessageFor(model => model.DateAdded, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
